{
  "name": "Trello Grocery list Organizer",
  "nodes": [
    {
      "parameters": {
        "id": "5a3f3fd1b6c2b87a1489d7c2"
      },
      "type": "n8n-nodes-base.trelloTrigger",
      "typeVersion": 1,
      "position": [
        -160,
        0
      ],
      "id": "129e8928-abdd-4912-800f-d5f3a7604c57",
      "name": "Trello Trigger",
      "webhookId": "a4297de4-112d-4848-9e8d-148d36d5066f",
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b5b91a73-fb36-45a8-bb7e-e216d976f2ec",
              "leftValue": "={{$json.action.type}}",
              "rightValue": "addLabelToCard",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "b04ed30d-f16e-48bc-9f56-27ea4727b613",
              "leftValue": "={{$json.action.data.text}}",
              "rightValue": "Generate List",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "35bf56f9-98fc-4c73-8a7b-c3511e6a3b75",
              "leftValue": "",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        40,
        0
      ],
      "id": "452c23dc-236f-400b-8e5d-627518516b09",
      "name": "If",
      "executeOnce": true
    },
    {
      "parameters": {
        "operation": "get",
        "id": {
          "__rl": true,
          "value": "={{ $json.action.data.card.id }}",
          "mode": ""
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        360,
        -20
      ],
      "id": "f97fa092-8c9e-4038-a6df-36a2ccc35a25",
      "name": "Get a card",
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "resource": "checklist",
        "operation": "get",
        "id": "={{ $json.idChecklists[0] }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        580,
        -20
      ],
      "id": "f15694dc-698c-4195-9216-86db3cc3efc5",
      "name": "Get a checklist",
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "resource": "checklist",
        "operation": "create",
        "cardId": {
          "__rl": true,
          "value": "={{$node[\"Get a card\"].json[\"id\"]}}\n",
          "mode": "id"
        },
        "name": "Sorted Shopping List",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        1540,
        -80
      ],
      "id": "d0eaf2f8-2f1b-46fc-938d-c670c5de17e1",
      "name": "Create a checklist",
      "executeOnce": false,
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "resource": "checklist",
        "operation": "createCheckItem",
        "checklistId": "={{ $json[\"checklistId\"].trim() }}",
        "name": "={{ $json[\"item\"].trim() }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        2420,
        -20
      ],
      "id": "4d6298aa-819b-4535-8432-f3a159dbc46b",
      "name": "Create checklist item",
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2080,
        -20
      ],
      "id": "1eec584b-6459-449a-913e-92180727ef32",
      "name": "Merge"
    },
    {
      "parameters": {
        "resource": "checklist",
        "operation": "delete",
        "cardId": {
          "__rl": true,
          "value": "={{$node[\"Get a card\"].json[\"id\"]}}",
          "mode": "id"
        },
        "id": "={{$node[\"Get a card\"].json[\"idChecklists\"][0]}}"
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        2600,
        -20
      ],
      "id": "382d7df1-3feb-4c06-a461-c46d7d0f2c8c",
      "name": "Delete a checklist",
      "executeOnce": true,
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "resource": "label",
        "operation": "removeLabel",
        "cardId": {
          "__rl": true,
          "value": "={{ $json.cardId }}",
          "mode": "id"
        },
        "id": "={{ $json.labelId }}"
      },
      "type": "n8n-nodes-base.trello",
      "typeVersion": 1,
      "position": [
        3200,
        -20
      ],
      "id": "b09a09a3-a038-418d-9063-d84051f82df5",
      "name": "Remove a label from a card",
      "credentials": {
        "trelloApi": {
          "id": "Vn6fa2NESy47o6S4",
          "name": "Trello account"
        }
      }
    },
    {
      "parameters": {
        "mode": "chooseBranch"
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2820,
        -20
      ],
      "id": "d2a9f298-07f7-4f95-ac38-eae0ee35b2b0",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nconst returnList = [];\n\nfor (const item of $input.first().json.checkItems) {\n  const itemName = item.name;\n  returnList.push(itemName);\n}\n\nreturn [{ json: { itemList: returnList } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        800,
        -20
      ],
      "id": "b5ccd606-8ef1-49ea-b57e-15c2460d32a7",
      "name": "extract checklist items"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://ollama:11434/api/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"gemma3:12b\",\n  \"prompt\": \"Take the following shopping list and return a cleaned and organized version with these exact rules:\\n\\n1. Combine duplicate items\\n- If measurements are provided (e.g. cups, tbsp, lbs), sum them up using imperial units.\\n- If no measurement is provided, treat each mention as 1 unit. Sum and prefix with a count (e.g. \\\"3 tomatoes\\\").\\n- If some mentions have measurements and others don’t, sum the measurements, then append a +N for the unmeasured items (e.g. \\\"2 cups spinach + 1\\\").\\n\\n2.  Differentiate ground vs fresh\\n- Treat “ground” and “fresh” as distinct items.\\n- If unspecified, assume fresh by default.\\n\\n3. Organize items into the following sections, in this exact order:\\n**Breads**\\n**Fruits**\\n**Vegetables**\\n**Nuts**\\n**Cheeses**\\n**Meats**\\n**Dairy**\\n**Eggs**\\n**Frozen Items**\\n**Juices and Seltzers**\\n**Snacks (chips, snack bars, cereal, cookies, crackers)**\\n**Cleaning, Shower, Medical, Toiletries**\\n**Pantry and Canned Goods**\\n\\n4.  Output Format\\n- Output only the checklist, nothing else — no intro, no explanation, no notes.\\n- Format:\\n  **Section**\\n  item 1\\n  item 2\\n\\n- Start your output with **Breads**\\n- Do not duplicate items across sections.\\n- Do not invent or infer items.\\n- Do not skip any items.\\n\\nExample input:\\n1 lbs ground beef\\n1 tbsp ginger\\npotato chips\\n2 tbsp ginger\\nhalf and half\\nbananas\\n1 tsp ground ginger\\nchopped spinach\\n2 cups spinach\\n\\nExpected output:\\n**Vegetables**\\n2 cups spinach + 1\\n\\n**Fruits**\\nbananas\\n\\n**Meats**\\n1 lbs ground beef\\n\\n**Dairy**\\nhalf and half\\n\\n**Snacks (chips, snack bars, cereal, cookies, crackers)**\\npotato chips\\n\\n**Pantry and Canned Goods**\\n3 tbsp ginger\\n1 tsp ground ginger\\n\\nNow use the following list:\\n{{ $json.itemList.join(',') }}\",\n \"stream\":false,\n  \"temperature\": 0.2,\n  \"top_p\": 0.8,\n  \"repetition_penalty\": 1.15,\n  \"stop\": [\"Let me know\", \"Here is\", \"===\"]\n}\n",
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1060,
        -20
      ],
      "id": "8d41bf6c-a2ac-4a6c-a68c-d4fd3ba72057",
      "name": "Ollama list reorganizer"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6b03fe34-9c1c-4590-b8c5-cc4e63798157",
              "name": "response",
              "value": "={{ $json.response }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1260,
        -20
      ],
      "id": "5102b68d-0ad0-40bf-830e-88d2b65310f3",
      "name": "response extractor"
    },
    {
      "parameters": {
        "jsCode": "const rawText = $json.response || \"\"; // Adjust if needed\n\nconst lines = rawText.split('\\n');\n\nlet section = '';\nconst output = [];\n\nfor (let line of lines) {\n  line = line.trim();\n\n  // Skip empty lines\n  if (!line) continue;\n\n  // Detect section headers like **Breads**\n  const sectionMatch = line.match(/^\\*\\*(.+?)\\*\\*$/);\n  if (sectionMatch) {\n    section = sectionMatch[1];\n    output.push({\n      json: {\n        item: `**${section}**`\n      }\n    });\n    continue;\n  }\n\n  // Skip \"None\"\n  if (line.toLowerCase() === 'none') continue;\n\n  // Add line as item under current section\n  output.push({\n    json: {\n      item: line\n    }\n  });\n}\n\nreturn output;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1540,
        80
      ],
      "id": "42b9349e-e14f-4a85-b1fb-fd8762afd5d9",
      "name": "List Creator"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7cd9484e-5294-4da7-80be-135ceb758c11",
              "name": "cardId",
              "value": "={{ $json.action.data.card.id }}",
              "type": "string"
            },
            {
              "id": "d55f5fb7-539d-4345-b13d-746ba7aa1626",
              "name": "labelId",
              "value": "={{ $json.action.data.label.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1540,
        -240
      ],
      "id": "b767c102-5ff2-4578-9b19-773386b4aa33",
      "name": "Send OldCardId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "79bc0197-3eef-4872-a2ed-eb461ab478d7",
              "name": "checklistId",
              "value": "={{ $json.checklistId }}",
              "type": "string"
            },
            {
              "id": "6d238ac9-1aa6-4973-9cfe-8ff95600a3e8",
              "name": "item",
              "value": "={{ $json.item }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        2240,
        -20
      ],
      "id": "ae48611c-c830-458e-b444-43bac82decac",
      "name": "Send checklist w/ checklistId"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "29338931-c8b9-4ca2-9e02-c804f3c45323",
              "name": "checklistId",
              "value": "={{ $json.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1760,
        -80
      ],
      "id": "ead3704a-157b-4b56-95a6-3acaae384874",
      "name": "Edit Fields"
    }
  ],
  "pinData": {},
  "connections": {
    "Trello Trigger": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Send OldCardId",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get a card",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a card": {
      "main": [
        [
          {
            "node": "Get a checklist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a checklist": {
      "main": [
        [
          {
            "node": "extract checklist items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create a checklist": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Send checklist w/ checklistId",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create checklist item": {
      "main": [
        [
          {
            "node": "Delete a checklist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete a checklist": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Remove a label from a card",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "extract checklist items": {
      "main": [
        [
          {
            "node": "Ollama list reorganizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama list reorganizer": {
      "main": [
        [
          {
            "node": "response extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "response extractor": {
      "main": [
        [
          {
            "node": "List Creator",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create a checklist",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Creator": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Send OldCardId": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send checklist w/ checklistId": {
      "main": [
        [
          {
            "node": "Create checklist item",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "469ec7ea-292a-448c-b9fd-1d38053872be",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fdaaa8bf71e776295c225d845fce2e359a7cd45b0543c288355195ab06456418"
  },
  "id": "BfjvTnMWm1PeTuOo",
  "tags": []
}